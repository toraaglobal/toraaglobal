"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os 


DEV_ENV = os.environ.get('DEV_ENV') # dev, test


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')=='True'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'website',
    'accounts',
    'crispy_forms',
    'tinymce',
    'blog',

    'django_crontab',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


if DEV_ENV == "dev":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

elif DEV_ENV == 'shared':
    #https://stackoverflow.com/questions/34777755/how-to-config-django-using-pymysql-as-driver
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql', 
            'NAME': os.environ.get('dbname'),
            'USER': os.environ.get('user'),
            'PASSWORD': os.environ.get('password'),
            'HOST': '127.0.0.1',
            'PORT': '3306',
        }
    }

else:
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ.get('dbname'), # os.environ.get('DB_NAME', 'default_value')
            'USER': os.environ.get('user'),
            'PASSWORD': os.environ.get('password'),
            'HOST': '127.0.0.1',
            'PORT': '5432',
            'OPTIONS': {'sslmode': 'prefer'},
        }
    }



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

if DEV_ENV == 'shared':
    STATIC_ROOT = '/home/eureyjpx/toraaglobal.com/static/'
    MEDIA_ROOT = '/home/eureyjpx/toraaglobal.com/media/'
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')



#authenticated_url
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
AUTH_USER_MODEL = 'accounts.User'


#authenticated_url
if DEBUG: # delete not when deploy
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
elif DEBUG==False:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = os.environ.get('EMAIL_HOST')
    EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS')=='True' # change it
    EMAIL_PORT = int(os.environ.get('EMAIL_PORT')) # change it
    EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
    EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

    DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# tinymce_configrations
TINYMCE_JS_URL = os.path.join(MEDIA_URL, "tinymce/js/tinymce/tinymce.min.js")
TINYMCE_JS_ROOT = os.path.join(MEDIA_ROOT, "tinymce")



# crispy config
CRISPY_TEMPLATE_PACK = 'bootstrap4'



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': os.environ.get("DJANGO_LOG_LEVEL"),
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,  'debug.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': os.environ.get("DJANGO_LOG_LEVEL"),
            'propagate': True,
        },
    },
}




# cron jobs
CRONJOBS = [
    # references https://en.wikipedia.org/wiki/Cron#Format
    # https://pypi.org/project/django-crontab/
    ('* */4 * * *', 'blog.cron.seed_crypto_new'),
]   
